@import "../base";

/* @define Header */
:root {
  --Header-size: 1;
  --Header-height: 5rem;
  --Header-displace: 2rem;
}

/**
* Root element is left behind (at top of page) to fill upp space
*/

.Header {
  width: 100%;
  height: var(--Header-height);
  contain: size style;
  position: relative;
}

.Header--white {
  --current-color: #fff;
}

.Header--static {
  --Header-size: 1;
}

@media print {
  .Header {
    display: none !important;
  }
}

.Header-slot {
  display: none;
}

/**
 * The thing that is following along on scroll
 * 1. Prevent capturing clicks on transformed area, override with links
 */

.Header-bar {
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
  user-select: none;
  pointer-events: none; /* 1 */
}

:root[scripting-enabled] .Header:not(.Header--static) .Header-bar {
  position: fixed;
}

.Header-fill {
  width: 100%;
  height: var(--Header-height);
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.985);
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.07);
}

@supports (-webkit-backdrop-filter: blur(1px)) {
  .Header:not(.Header--static) .Header-fill {
    background: rgba(255, 255, 255, 0.94);
    -webkit-backdrop-filter: blur(10px);
  }
}

.Header--black .Header-fill,
.Header--white .Header-fill {
  background-color: transparent;
  box-shadow: none;
}

@media (min-width: 700px) {
  .Header-fill {
    transform-origin: top center;
    transform: translateY(calc((-1 * var(--Header-displace)) * (1 - var(--Header-size))));
  }

  .Header:not(.Header--static) .Header-fill {
    will-change: transform;
  }

  /* .Header--static .Header-fill {
    transform-origin: top center;
    transform: translateY(calc((-1 * var(--Header-displace)) * 0));
  } */

  .Header-slot {
    display: block;
    margin-left: 1.8rem;
  }
}

.Header-content {
  display: flex;
  height: var(--Header-height);
  position: relative;
  flex: 1 0 100%;
  align-items: center;
  position: relative;
  z-index: 1;
}

@media (min-width: 700px) {
  .Header-content {
    top: calc((var(--Header-displace) / 2) * -1);
  }

  .Header-content {
    transform: translateY(calc((var(--Header-displace) / 2) * var(--Header-size)));
    will-change: transform;
  }

  /* .Header--static .Header-content {
    transform: translateY(calc((var(--Header-displace, 1) / 2) * (1 - 0)));
  } */
}

.Header-nav {
  flex: 1 0 auto;
  pointer-events: auto;
}

.Header-list {
  list-style: none;
}

@media (min-width: 1300px) {
  .Header-list {
    transform-origin: center right;
    transform: scale(calc(1.2 - (0.2 * (1 - var(--Header-size)))));
  }

  /* .Header--static .Header-list {
    transform-origin: center right;
    transform: scale(calc(1.2 - (0.2 * 0)));
  } */

  .Header-button--back {
    transform-origin: center left;
    transform: scale(calc(1.2 - (0.2 * 0)));
  }
}

/**
 * The logo
 * 1. Optical circle alignment
 */

.Header-logo {
  box-sizing: content-box;
  display: flex;
  padding: 0.5rem;
  margin-right: auto;
  margin-left: -0.6rem;
  position: relative;
  left: -0.06rem; /* 1 */
  vertical-align: top;
  pointer-events: auto;
  z-index: 1;
}

@media (min-width: 700px) {
  .Header .Header-logo {
    transform: scale(calc(1 + (0.25 * var(--Header-size))));
    transform-origin: center left;
  }
}

/**
 * Increase dimensions wider viewports
 */

@media (min-width: 700px) {
  :root {
    --Header-height: 7rem;
  }
}

@media (min-width: 1000px) {
  :root {
    --Header-height: 8rem;
  }

  .Header-logo {
    font-size: 1.2em;
  }
}

/**
 * Button
 */

.Header-button {
  display: inline-block;
  height: 1.8em;
  padding: 0 0.9rem;
  position: relative;
  z-index: 1;
  pointer-events: auto;
  line-height: 1.85em;
  font-weight: 600;
  font-size: 1.5rem;
  font-family: var(--heading-font-family);
  word-spacing: var(--heading-word-spacing);
  border-radius: 2px;
  white-space: nowrap;
  text-transform: uppercase;
  transition: background-color 180ms var(--ease-out);
}

.Header-button:hover { background: rgba(var(--color-gray-light), 0.6); }
.Header--white .Header-button:hover { background: rgba(0, 0, 0, 0.08); }
.Header--black .Header-button:hover { background: rgba(0, 0, 0, 0.08); }
.Header-button--back { background: rgba(0, 0, 0, 0.12); }
.Header-button.Header-button--back:hover { background: rgba(0, 0, 0, 0.16); }

.Header.is-open .Header-button:hover,
:root:not([scripting-enabled]) .Header:target .Header-button:hover {
  background: rgba(var(--color-gray-light), 0.05);
}

.Header-button.is-current {
  color: rgb(var(--color-link));
}

/**
 * Navigation toggle and our juicy vegan burger
 */

.Header-button--toggle {
  display: flex;
  align-items: center;
  padding-right: 0.8rem;
  position: absolute;
  right: 0.3rem;
  text-align: right;
}

.Header-button--noscript {
  display: none;
}

:root:not([scripting-enabled]) .Header:target .Header-button--toggle {
  display: none;
}

:root:not([scripting-enabled]) .Header:target .Header-button--noscript {
  display: flex;
}

@media (min-width: 500px) {
  .Header-button--toggle {
    right: 0.7rem;
  }
}

.Header-burger {
  width: 1.125rem;
  height: 0.875rem;
  margin-right: 0.4em;
  position: relative;
  pointer-events: auto;
  transition: transform 250ms var(--ease-out);
  will-change: transform;
}

.Header-burger::before,
.Header-burger::after,
.Header-beanPatty {
  content: "";
  position: absolute;
  right: 0;
  width: 100%;
  height: 0.125rem;
  background: currentColor;
  transform-origin: top right;
  transition: transform 250ms var(--ease-out), opacity 250ms var(--ease-out);
  will-change: transform;
}

.Header-burger::before {
  top: 0;
  width: 0.875rem;
}

.Header-burger::after {
  bottom: 0;
  width: 0.75rem;
}

.Header-beanPatty {
  top: 0.375rem;
  transform-origin: center center;
}

.Header.is-open .Header-burger,
:root:not([scripting-enabled]) .Header:target .Header-burger {
  transform: translateX(-0.3125rem);
}

.Header.is-open .Header-burger::before,
:root:not([scripting-enabled]) .Header:target .Header-burger::before {
  transform: rotate(-45deg) translate(0.0625rem, -0.0625rem) scaleX(1.49);
}

.Header.is-open .Header-burger::after,
:root:not([scripting-enabled]) .Header:target .Header-burger::after {
  transform: rotate(45deg) translate(0.125rem, 0rem) scaleX(1.74);
}

.Header.is-open .Header-beanPatty,
:root:not([scripting-enabled]) .Header:target .Header-beanPatty {
  transform: scaleX(0);
  opacity: 0;
}

/**
 * High contrast button
 */

.Header-button--contrast {
  display: none;
  height: auto;
  padding: 0.4rem;
  border-radius: 50%;
  transform-origin: center center;
  transition: transform 150ms var(--ease);
}

:root[scripting-enabled] .Header-button--contrast {
  display: flex;
}

.Header-toggle {
  width: 1.5625rem;
  height: 1.5625rem;
  transition: transform 200ms var(--ease);
  will-change: transform;
}

.Header-button--contrast:hover {
  transform: scale(1.1);
}

.Header-button--contrast.is-active .Header-toggle {
  transform: rotate(180deg);
}

/**
 * The arrows for the links and back button
 */

.Header-button--back {
  padding-left: 1.75rem;
}

.Header-button--link {
  padding-right: 1.75rem;
}

.Header-arrow {
  position: absolute;
  border-style: solid;
  border-color: currentColor;
  width: 0.625rem;
  height: 0.625rem;
  border-width: 0.0625rem 0.0625rem 0 0;
  top: 49%;
  left: 1rem;
  transform: translateY(-50%) rotate(-135deg);
  transition: left 140ms var(--ease-out), right 100ms var(--ease-out);
}

.Header-button--link .Header-arrow {
  transform: translateY(-50%) rotate(45deg);
  left: auto;
  right: 1rem;
}

.Header-button--back:hover .Header-arrow {
  left: 0.875rem;
}

.Header-button--link:hover .Header-arrow {
  right: 0.875rem;
}

/**
 * Narrow viewports with vertical navigation. Note the max-width query.
 */

@media (max-width: 1000px) {
  .Header-list,
  .Header-button--back {
    transform: none !important;
  }

  .Header-nav {
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 0;
    visibility: hidden;
    opacity: 0;
    transform: translateY(var(--Header-displace));
    transition: 300ms 100ms var(--ease-out);
    transition-property: transform, opacity;
  }

  /**
   * The ”fill” is reused used as background for the full page navigation
   */

  .Header.is-open .Header-bar,
  :root:not([scripting-enabled]) .Header:target .Header-bar {
    position: fixed;
    color: #fff;
  }

  .Header.is-open .Header-fill,
  :root:not([scripting-enabled]) .Header:target .Header-fill {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    background: rgb(var(--color-gray-dark));
    transform: none !important;
  }

  .Header.is-open .Header-nav,
  :root:not([scripting-enabled]) .Header:target .Header-nav {
    visibility: visible;
    width: 100%;
    height: calc(100vh - 15px);
    opacity: 1;
    transform: translateY(0);
  }

  .Header-list {
    padding: 0;
    position: absolute;
    top: 23%;
    left: 0.9rem;
  }

  /**
   * Link styles
   */

  .Header-button--link {
    height: auto;
    padding: 2px 2.7rem 0 0.9rem;
    color: inherit;
    font-size: 2rem;
    line-height: 3rem;
  }

  .Header-button--link .Header-arrow {
    width: 0.75rem;
    height: 0.75rem;
    top: 50%;
    right: 1.3125rem;
    transform: translateY(-50%) rotate(45deg);
  }

  .Header-button--link:hover .Header-arrow {
    right: 1.1875rem;
  }

  .Header-button--link:hover .Header-arrow {
    right: 1.1875rem;
  }

  /**
   * Let's not mark current page in vertical nav, it's mostly confusing
   */

  .Header-button--link.is-current,
  .Header-button--link.is-current:hover {
    color: inherit;
    background: rgba(var(--color-gray-light), 0.05);
  }
}

/**
 * Give the items in the vertical navigation a bit more space when possible.
 */

@media (max-width: 1000px) and (min-height: 600px) {
  .Header-button--link {
    font-size: 3rem;
    line-height: 4.75rem;
    height: 4.625rem;
  }

  .Header-list {
    top: 18%;
  }

  .Header-button--link .Header-arrow {
    width: 1.125rem;
    height: 1.125rem;
    right: 1.25rem;
  }

  .Header-button--link:hover .Header-arrow {
    right: 1.125rem;
  }
}

/**
 * Horizontal navigation
 */

@media (min-width: 1000px) {
  .Header-button--toggle,
  .Header-burger {
    display: none;
  }

  .Header-nav {
    flex: 1 0 auto;
  }

  .Header-list {
    display: flex;
    align-items: center;
    float: right;
  }

  .Header-item {
    margin-left: 0.75rem;
  }
}

/**
 * White theme
 */

.Header--white,
.Header--white .Header-button--link.is-current,
.Header--white .Header-button--link.is-current:hover {
  color: #fff;
}

.Header--white:not(.is-open) .Header-logo path {
  fill: #fff;
}

/**
 * Black theme
 */

.Header--black,
.Header--black .Header-button--link.is-current,
.Header--black .Header-button--link.is-current:hover {
  color: rgb(var(--high-contrast-light, 0, 0, 0));
}

.Header--black:not(.is-open) .Header-logo path {
  fill: rgb(var(--high-contrast-light, 0, 0, 0));
}

/**
 * Tooltip
 */

.Header-tooltip {
  font-family: var(--default-font-family);
  font-weight: normal;
  font-size: 0.625rem;
  background: rgb(var(--default-color));
  z-index: 1;
  position: absolute;
  top: calc(100% + 1rem);
  left: 50%;
  color: #fff;
  text-transform: none;
  word-spacing: normal;
  line-height: 1.3;
  padding: 0.3rem 0.4rem 0.3rem;
  border-radius: 2px;
  text-align: center;
  pointer-events: none;
  transform: translateX(-50%);
  transition: opacity 150ms var(--ease-out);
  opacity: 0;
}

.Header-tooltip::before {
  content: "";
  position: absolute;
  top: -0.2rem;
  left: 50%;
  transform: translateX(-50%) rotate(45deg);
  width: 0.4rem;
  height: 0.4rem;
  background: rgb(var(--default-color));
}

.Header-button:hover .Header-tooltip,
.Header-button:focus-visible .Header-tooltip {
  opacity: 1;
}

@media (max-width: 999px) {
  .Header-tooltip {
    display: none;
  }
}
