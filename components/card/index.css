@import "../base";

/* @define Card */
.Card {
  display: flex;
  flex-direction: column;
  width: 100%;
  position: relative;
}

.Card--interactive .Card-content::before {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  background: rgba(0, 0, 0, 0.09);
  transition: opacity 180ms var(--ease-out);
}

.Card--interactive:hover .Card-content::before {
  opacity: 1;
}

.Card-content {
  display: flex;
  flex-direction: column;
  flex: 1 0 auto;
  align-items: flex-start;
}

@media (min-width: 1000px) {
  .Card-content {
    padding-bottom: 17px;
  }
}

@media (min-width: 1200px) {
  .Card-content {
    padding-bottom: 10px;
  }
}

.Card--bg .Card-content {
  padding: 20px 20px 30px;
}

@media (min-width: 400px) {
  .Card--bg .Card-content {
    padding: 28px 32px 32px;
    min-height: 260px;
  }
}

/**
 * 1. Get a z-index to put ontop of hover shading
 */

.Card-body {
  flex-grow: 1;
  position: relative; /* 1 */
  width: 100%;
}

.Card-meta {
  display: block;
  margin: 0.75rem 0 0.6rem;
  color: rgb(var(--color-text-muted));
  font-size: 0.875rem;
  font-style: normal;
}

.Card-title {
  font-size: 1.5rem;
  line-height: 1.15;
  font-weight: 600;
  text-transform: uppercase;
  font-family: var(--heading-font-family);
  line-height: var(--heading-line-height);
  word-spacing: var(--heading-word-spacing);
}

.Card:not(.Card--bg) .Card-title:first-child {
  margin-top: 1rem;
}

@media (min-width: 900px) {
  .Card-title {
    font-size: 2rem;
    line-height: 1.05;
  }
}

.Card-text {
  font-size: 1rem;
  margin-top: 0.3em;
}

.Card-footer {
  --current-background: 0, 0, 0;
  flex-grow: 0;
  width: 100%;
}

.Card--bg .Card-footer {
  margin: 4px 0 0;
}

@media (min-width: 400px) {
  .Card--bg .Card-footer {
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    padding-top: 5px;
    margin: 34px 0 0;
  }
}

.Card--dark .Card-footer {
  --current-background: 255, 255, 255;
  border-top-color: rgba(255, 255, 255, 0.2);
}

.Card--bg {
  background-color: rgb(var(--high-contrast-dark, var(--Card-background-color, var(--current-background))));
}

.Card--dark {
  color: #fff;
}

.Card--bg .Card-content {
  padding: 1rem 1rem 0;
}

/**
 * Figure
 */

.Card-figure {
  margin: 0;
  position: relative;
  max-height: 21rem;
  overflow: hidden;
  background-color: rgba(var(--color-gray-light), 0.6);
}

.Card-figure::before {
  content: "";
  display: block;
  height: 0;
  padding-top: calc(100% * 3/4);
}

.Card-figure.is-loading {
  background-color: rgba(var(--color-gray-light), 0.6);
}

.Card-caption {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
}

.Card-image {
  position: absolute;
  left: 50%;
  top: 50%;
  max-height: 100%;
  width: auto;
  transform: translate(-50%, -50%);
}

@supports (object-fit: cover) {
  .Card-image {
    object-fit: cover;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    transform: none;
  }
}

/**
 * Link
 */

.Card-link {
  display: inline-block;
  line-height: 52px;
  font-size: 1.5rem;
  color: rgb(var(--color-link));
  text-transform: uppercase;
  font-family: var(--heading-font-family);
  font-weight: 600;
  white-space: nowrap;
  word-spacing: var(--heading-word-spacing);
  user-select: none;
  transition: 140ms var(--ease-out);
  transition-property: background-color, color;
}

.Card-link:not(.Card-link--silent) {
  margin: 0.2rem 0 -1.5rem -0.8rem;
  padding: 0 1rem 0 0.8rem;
}

@media (min-width: 500px) {
  .Card-link:not(.Card-link--silent) {
    padding: 0 16px 0 14px;
    margin: 8px 0 0 -14px;
  }
}

.Card-link--block::after {
  content: "";
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  cursor: pointer;
}

.Card-link:not(.Card-link--silent):hover {
  background: rgba(var(--current-background, 0, 0, 0), 0.04);
  color: rgb(var(--color-link-shaded));
}

.Card-link--inherit,
.Card-link--inherit:hover {
  color: inherit;
}

/* .Card-link-arrow {
  border-style: solid;
  width: 10px;
  height: 10px;
  margin-left: 5px;
  border-width: 1px 1px 0 0;
  transform: rotate(45deg);
  transition: transform 180ms cubic-bezier(0, 0, .2, 1);
}

.Card-link:hover .Card-link-arrow {
  transform: rotate(45deg) translate(2px, -2px);
}

.Card-link-download {
  display: block;
  margin-left: 8px;
  height: 18px;
  position: relative;
  top: -1px;
  right: -2px;
}

.Card-link-downloadArrow {
  transform: translateY(1px);
  transition: transform 180ms cubic-bezier(0, 0, .2, 1);
}

.Card-link:hover .Card-link-downloadArrow {
  transform: translateY(2px);
} */

/**
 * 1. Fix text rendering jumping in Safari on hover
 */

/* .Card-link-external {
  display: block;
  margin-left: 11px;
  height: 15px;
  width: 15px;
  overflow: visible !important;
}

.Card-link-externalArrow {
  will-change: transform;
  transition: transform 180ms cubic-bezier(0, 0, .2, 1);
}

.Card-link:hover .Card-link-externalArrow {
  transform: translate(2px, -2px);
} */

/**
 * Tweak the global focus states a little bit
 */

/*

.Card-link--fill .Card-link {
  padding: 0;
  width: 100%;
  margin: 4px 0 -23px;
}

@media (min-width: 400px) {
  .Card-link--fill .Card-link {
    border-top: 1px solid rgba(255, 255, 255, 0.2);
    padding-top: 5px;
    margin: 34px 0 -26px;
  }
}

.Card-link--light .Card-link {
  border-top-color: rgba(0, 0, 0, 0.1);
}

.Card-link--fill .Card-link,
.Card-link--fill .Card-link:hover,
:root.has-js .Card-link--fill:hover .Card-link {
  color: #fff;
}

:root.has-js .Card-link--linked:not(.is-loading):hover .Card-link-content::before {
  opacity: 1;
}

.Card-link--light .Card-link-content,
.Card-link--light .Card-link-meta,
.Card-link--light .Card-link,
.Card-link--light .Card-link:hover,
:root.has-js .Card-link--light:hover .Card-link {
  color: rgba(0, 0, 0, 0.9);
} */
